<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WithDatabaseAsyncDockerized</name>
    </assembly>
    <members>
        <member name="T:DIinCore.Controllers.CategoriesController">
            <summary>
            Kontroler veb servisa koji vrace kategorije 
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:DIinCore.Controllers.CategoriesController.#ctor(DIinCore.ICategoryRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:DIinCore.Controllers.CategoriesController"/> class.
            </summary>
            <param name="categoryRepository">The category repository.</param>
        </member>
        <member name="M:DIinCore.Controllers.CategoriesController.Get">
            <summary>
            Vraće kategorije.
            Metod radi na asinhroni način.
            </summary>
            <returns>
            OK kod ako je sve OK.
            </returns>
        </member>
        <member name="M:DIinCore.Controllers.CategoriesController.Details(System.Nullable{System.Int32})">
            <summary>
            Daje detalje za prosledjeni identifikato kategorije.
            Metod radi na asinhroni način.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:DIinCore.Controllers.CategoriesController.PostAsync(DIinCore.Category)">
            <summary>
            Ubacuje zadatu kategoriju među kategorije. 
            Metod radi na asinhroni način.
            </summary>
            <example>
            POST: api/categories
            </example>
            <param name="kat">Kategorija koja se ubacuje.</param>
            <returns>Elemenat za povratni poziv tipa <see cref="T:Category"/>
            , koji predstavlja novododati kategoriju.</returns>
            <response code="201">Putanja prema novododatoj kategoriji.</response>
            <response code="400">Pokušaj dodavanja kategorije nije uspeo.</response>
            <response code="500">Greška u procesiranju na serverskoj strani.</response>
        </member>
        <member name="M:DIinCore.Controllers.CategoriesController.Put(System.Int32,DIinCore.Category)">
            <summary>
            Postavlja podatke za zadatu kategoriju. 
            Metod radi na asinhroni način.
            </summary>
            <example>
            PUT: api/categories/5
            </example>
            <param name="id">Identifikator kategorije koja se postavlja.
            Mora da se podudari sa poljem id kod parametra entitet.</param>
            <param name="entitet">Novi podaci.
            Vrednost polja id u okviru ovog objekta mora da se poklopi sa vrednošću parametra id.</param>
            <returns>Elemenat za povratni poziv.</returns>
            <response code="204">Postavljanje podataka je uspešno realizovano.</response>
            <response code="400">Pokušaj promene podataka za grad nije uspeo.</response>
            <response code="500">Greška u procesiranju na serverskoj strani.</response>
        </member>
        <member name="M:DIinCore.Controllers.CategoriesController.Delete(System.Int32)">
            <summary>
            Briše zadatu kategoriju. Kategorija koja će biti izbrisana se određuje preko identifikatora. 
            Metod radi na asinhroni način.
            </summary>
            <example>
            DELETE: api/categories/5
            </example>
            <param name="id">Identifikator kategorije koja se briše.</param>
            <returns>Elemenat za povratni poziv.</returns>
            <response code="200">Brisanje je uspešno realizovano.</response>
            <response code="400">Pokušaj brisanja nije uspeo.</response>
            <response code="500">Greška u procesiranju na serverskoj strani.</response>
        </member>
        <member name="M:DIinCore.Controllers.ValuesController.Get">
            <summary>
            Gets this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DIinCore.Controllers.ValuesController.Get(System.Int32)">
            <summary>
            Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:DIinCore.Controllers.ValuesController.Post(System.String)">
            <summary>
            Posts the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:DIinCore.Controllers.ValuesController.Put(System.Int32,System.String)">
            <summary>Puts the specified identifier.</summary>
            <param name="id">The identifier.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:DIinCore.Controllers.ValuesController.Delete(System.Int32)">
            <summary>
            Brise elemente kobajagi...
            </summary>
            <param name="id">
            Identifikator parametra koji treba obrisati kobajagi 
            </param>
        </member>
        <member name="T:DIinCore.KategorijeContext">
            <summary>
            Kontekst podataka
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.DbContext" />
        </member>
        <member name="P:DIinCore.KategorijeContext.Category">
            <summary>
            Gets or sets the category.
            </summary>
            <value>
            The category.
            </value>
        </member>
        <member name="M:DIinCore.KategorijeContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{DIinCore.KategorijeContext})">
            <summary>
            Initializes a new instance of the <see cref="T:DIinCore.KategorijeContext"/> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:DIinCore.KategorijeContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            <para>
            Override this method to configure the database (and other options) to be used for this context.
            This method is called for each instance of the context that is created.
            </para>
            <para>
            In situations where an instance of <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" /> may or may not have been passed
            to the constructor, you can use <see cref="P:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.IsConfigured" /> to determine if
            the options have already been set, and skip some or all of the logic in
            <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" />.
            </para>
            </summary>
            <param name="optionsBuilder">A builder used to create or modify options for this context. Databases (and other extensions)
            typically define extension methods on this object that allow you to configure the context.</param>
        </member>
        <member name="M:DIinCore.KategorijeContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Override this method to further configure the model that was discovered by convention from the entity types
            exposed in <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> properties on your derived context. The resulting model may be cached
            and re-used for subsequent instances of your derived context.
            </summary>
            <param name="modelBuilder">The builder being used to construct the model for this context. Databases (and other extensions) typically
            define extension methods on this object that allow you to configure aspects of the model that are specific
            to a given database.</param>
            <remarks>
            If a model is explicitly set on the options for this context (via <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseModel(Microsoft.EntityFrameworkCore.Metadata.IModel)" />)
            then this method will not be run.
            </remarks>
        </member>
        <member name="T:DIinCore.Category">
            <summary>
            Kategorija
            </summary>
        </member>
        <member name="P:DIinCore.Category.CategoryId">
            <summary>
            Gets or sets the category identifier.
            </summary>
            <value>
            The category identifier.
            </value>
        </member>
        <member name="P:DIinCore.Category.CategoryName">
            <summary>
            Gets or sets the name of the category.
            </summary>
            <value>
            The name of the category.
            </value>
        </member>
        <member name="T:DIinCore.Program">
            <summary>
            Ulazna klasa
            </summary>
        </member>
        <member name="M:DIinCore.Program.Main(System.String[])">
            <summary>
            Defines the entry point of the application.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:DIinCore.Program.BuildWebHost(System.String[])">
            <summary>
            Builds the web host.
            </summary>
            <param name="args">The arguments.</param>
            <returns></returns>
        </member>
        <member name="T:DIinCore.CategoryRepositoryEntityFramework">
            <summary>
            Repozitorujum za kategorije 
            </summary>
            <seealso cref="T:DIinCore.ICategoryRepository" />
        </member>
        <member name="M:DIinCore.CategoryRepositoryEntityFramework.#ctor(DIinCore.KategorijeContext)">
            <summary>
            Initializes a new instance of the <see cref="T:DIinCore.CategoryRepositoryEntityFramework"/> class.
            </summary>
            <param name="kontekst">The kontekst.</param>
        </member>
        <member name="M:DIinCore.CategoryRepositoryEntityFramework.GetCategoriesAsync">
            <summary>
            Gets the categories.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DIinCore.CategoryRepositoryEntityFramework.GetCategoryByIdAsync(System.Int32)">
            <summary>
            Gets the category by identifier.
            </summary>
            <param name="id">The category identifier.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:DIinCore.CategoryRepositoryEntityFramework.DeleteCategoryAsync(System.Int32)">
            <summary>
            Deletes the category.
            </summary>
            <param name="id">The identifier.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:DIinCore.CategoryRepositoryEntityFramework.InsertCategoryAsync(DIinCore.Category)">
            <summary>
            Inserts the category.
            </summary>
            <param name="kategorija">The kategorija.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:DIinCore.CategoryRepositoryEntityFramework.UpdateCategoryAsync(System.Int32,DIinCore.Category)">
            <summary>
            Updates the category.
            </summary>
            <param name="id">The identifier.</param>
            <param name="kategorija">The kategorija.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:DIinCore.ICategoryRepository">
            <summary>
            Interfejs koji opisuje repozitorijum za kategorije
            </summary>
        </member>
        <member name="M:DIinCore.ICategoryRepository.GetCategoriesAsync">
            <summary>
            Gets the categories.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DIinCore.ICategoryRepository.GetCategoryByIdAsync(System.Int32)">
            <summary>
            Gets the category by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:DIinCore.ICategoryRepository.InsertCategoryAsync(DIinCore.Category)">
            <summary>
            Inserts the category.
            </summary>
            <param name="kategorija">The kategorija.</param>
        </member>
        <member name="M:DIinCore.ICategoryRepository.UpdateCategoryAsync(System.Int32,DIinCore.Category)">
            <summary>
            Updates the category.
            </summary>
            <param name="id">The identifier.</param>
            <param name="kategorija">The kategorija.</param>
        </member>
        <member name="M:DIinCore.ICategoryRepository.DeleteCategoryAsync(System.Int32)">
            <summary>
            Deletes the category.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="T:DIinCore.Startup">
            <summary>
            Programski kod koji se izvrsava pri pokretanju
            </summary>
        </member>
        <member name="M:DIinCore.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:DIinCore.Startup"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="P:DIinCore.Startup.Configuration">
            <summary>
            Gets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="M:DIinCore.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures the services.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:DIinCore.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Configures the specified application.
            </summary>
            <param name="app">The application.</param>
            <param name="env">The env.</param>
        </member>
    </members>
</doc>
